230614 참고 주소
-> https://reactjs.winterlood.com/c167aa87-b661-4d35-9bc3-2a5e5434d4ac
230615
-> 참고 주소 - 5-6 (useRef) : Body.tsx
-> 참고 주소 - p1 (카운터 앱 만들기) : Viewer.tsx, Controller.tsx, App.tsx
-> 참고 주소 - 6 (useEffect) : 


터미널 창
npx create-react-app 폴더명( ex* react class01 )
cd 폴더명 ( -> 폴더 이동)
npm start ( -> localhost: (= react 기본 페이지 뜸)
-> localhost:3000 페이지 코딩은 App.xxx에서 볼수있다.
tsx 기 때문에 html코드도 사용한다.
!!! tsx : (* 2개 이상의 태그가 형제로 있을경우) 무조건 가장 최상단에 부모요소가 있어야함

npx create-react-app react_class02 --template typescript
(= src 폴더가 js가 아닌 tsx(*typescript & XML) 로 되있다)

사용이 끝나면 crtl + c로 꺼주자

리액트 > 타입스크립트 / 노드js
npx : node package Execute
(* npx는 기본적으로 노드 패키지의 최신버전을 가져와 알아서 실행시켜주는 명령어)
( = npm안에 패키지가 버전 업데이트가 됐을 경우 먹통이 되는 경우가 있기에 npm안씀)

리액트에서 랜더/랜더링은 화면에 출력하란 뜻 (많이 사용)

리액트 기본 핵심이론 3가지
1) JSX : Javascript and XML
- 여는태그 & 닫는태그
- 여는태그만 있는 경우(= input태그)

2) State : 상태
- 이벤트 (* 전/후)

3) Props : propertys약어 = 속성
- 리액트 (*컴포넌트 기반의 자바스크립트 라이브러리)
- A라는 컴포넌트의 속성을 B라는 컴포넌트에 전달하고 싶은경우


============== 리액트의 CSS!!
- 리액트에서 CSS스타일을 적용하는 방법은 변수를 선언하고, 해당 변수에 스타일을 정의하고자 하는
값을 "객체" 타입으로 할당한 후 해당 값을 자바스크립트에서 객체의 프로퍼티 값을 가져오듯이 사용하면 가능

(* 리액트에선 출력문에 연산식을 직접입력하여 바로 출력할 수 있음!
// ex) <b>{number}는 : {number % 2 === 0 ? "짝수" : "홀수"} )</b>
================================================================

리액트에서 컴포넌트를 생성할 땐 파일명 및 함수이름은 가급적 문자로 시작, 대문자를 써주는게 통상적인 관념임
( 소문자도 정상적으로 진행은 되나 컴포넌트는 대문자로 시작해보장 )

tsx,jsx 문법 유의사항!!
1. 무조건 닫는 태그가 존재해야함
2. 형제 요소가 복수인 경우 반드시 최상위 태그(*부모태그)가 존재해야함
만약 인위적으로 부모태그를 만들고 싶다면
<React.Fragment>를 쓰면 됨 ( !! import React from 'react'; 써야됨 )

==========================================================================================