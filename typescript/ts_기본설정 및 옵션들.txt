// 타입스크립트는 구동할 수 있는 런타임 프로그램이 필요!! -> Node.js가 대세임
JS -> TS = Node.js(*런타임, JS를 TS로 쓸 수 있음)
NPM : Node Package Manager

=================================================================

1. Node.js 설치 및 npm 기본세팅 (*ts를 js로 컴파일링하기 위한 목적)

node.js 설치 (LTS)

vscode로 이동 후 터미널
node -v 입력 : node.js 버전 확인 명령어
npm -v 입력 : node package manager 버전 확인 명령어

(위 두개는 그냥 확인용임, 다시 만들땐 밑에 하나 입력하면 json파일 생김)

npm init입력 : 기본 npm 초기화 명령어
엔터 여러번 -> package.json생성됨

npm i @types/node 입력 : node.js에 있는 기본 내장 타입모듈을 확인하는 명령어
(입력하면 node_modules폴더 & package-lock.json 생김)
npm i typescript -g 입력 : 타입스크립트 컴파일링 프로그램을 설치하는 명령어
(*컴파일 : 프로그램 언어를 컴퓨터가 이해할 수 있도록 번역해주는 중간과정)

tsc -v 입력 : 타입스크립트 컴파일링 프로그램 버전 확인 명령어
-> 학원컴퓨터가 외부프로그램 설치 막아서 안됨 따라서
1. 윈도우 찾기창에서 Windows PowerShell을 관리자 권한으로 실행
2. get-help Set-ExecutionPolicy입력 후 y입력
3. Set-ExecutionPolicy RemoteSigned 입력 후 a입력

tsc : 타입스크립트 컴파일링의 약어로 컴파일링을 지시할 때 사용하는 명령어
(*tsc src/index.ts : src경로안에 있는 index.ts 파일을 자바스크립트로 컴파일링 해주세요란 뜻)

node : 타입스크립트에서 컴파일링된 자바스크립트 파일을 실행할 때 사용하는 명령어
(*node src/index.js : src경로 안에 있는 index.js 파일을 실행해주세요란 뜻)

npm i ts-node -g : 타입스크립트 파일을 자바스크립트로 컴파일링 함과 동시에 실행시켜줄 수 있는 **ts-node 설치 명령어

ts-node : 타입스크립트 파일을 자바스크립트로 컴파일링 함과 동시에 실행시키도록 하는 명령어
(*ts-node src/index.ts : src경로 안에 있는 index 파일을 컴파일과 동시에 실행해주세요란 뜻)

2. 타입스크립트 컴파일링 옵션 설정
tsc -init : 타입스크립트 컴파일링 기본옵션을 볼 수 있도록하는 명령어
(입력하면 tsconfig.json 생김, 다 삭제하고 작성)

2.1. 타입스크립트 옵션
tsconfig.json에
- 1. "include" : 컴파일링 하고자 하는 파일이 위치한 경로를 설정하는 옵션
{
  "include": ["src(== 경로 폴더)"]
}
(**이렇게 하고 콘솔에 tsc만 적으면 경로를 안써도 알아서 같은이름.js가 생김)

- 2. "target" :
- 3. "module" : 타입스크립트 모듈 종류 2가지
	- CJS : Common JS
	- ESM : Ecmascript Module -> node.js의 NPM은 ESM을 기본값으로 적용
- 4. "outDir" : 컴파일링된 자바스크립트 파일을 어디에 저장할지 결정하는 옵션
- 5. "strict" : 컴파일링할 때, 얼만큼 엄격하게 할 지 결정하는 옵션 (*가장 많이 사용)
	(* true / false)
- 6. "moduleDetection" : 각각의 타입스크립트 파일을 독립된 개별모듈로 인식시키도록 하는 옵션
	(*force)

3. 타입스크립트 기본타입
3.1 ) 원시 타입 (*내장타입)
- number
- string
- boolean
- null (*의도적으로 값을 할당하지 않은 상태)
- undefined (*자연스럽게 아직 값이 할당되지 않은 상태)

3.2 ) 리터럴 타입

// 배열에 들어가는 요소들이 다양한 경우
let multiArr: (number | string)[] = [1, "hello")
