========================= mysql 셋팅
** mysql 설치
1. mysql 사이트 접속
2. Developer Zone 이동
3. 맨 하단 footer에 downloads 란에서 아무거나 클릭
4. 다운로드 title 옆 화살표로 뒤로가기
5. 목록중 하단에 있는 mysql intaller for windows클릭 후 첫번째 파일 설치 (워크벤치와 함께 설치하기 위해)

** 설치확인
1. !!! vscode 터미널(cmd)에서 mysql이 있는 경로로 cd 하기
  ex ) cd C:\Program Files\MySQL\MySQL Server 8.0\bin
2. mysql -h localhost -u root -p 입력 => -h: host명, -u: user명 -p: password
3. 설치할 때 입력한 비밀번호 입력 (대소문자 구분)

** mysql workbench
1. mysql workbench 접속 후 mysql connections 옆 +버튼 클릭
2. 상단 connection name에 localhost입력
3. password의 store in vault 클릭
4. 비밀번호 입력


** sql 시작
1. console 창 ex) mysql> 부분
2. CREATE SCHEMA `nodejs` DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_general_ci;
// 무조건 맨 끝엔 ;(세미콜론)을 붙혀야함
// --> 데이터베이스의 행을 만들 준비가 완료됨

** workbench에서 똑같이 할 수 있음
===== workbench에선 상단 아이콘 중 왼쪽에서 4번째를 클릭 후 name명 지정
name: nodejsW(workbench라 W쓴것 이름 의미없음)
charset/Collation: 첫번째 select: utf8mb4, 두번째: utf8mb4_general_ci
Apply 버튼 클릭

workbench 왼쪽 navigator에서 하단 Schemas 클릭하면 현재 테이블을 볼 수 있음

** 테이블 만들기 (user 테이블)
1. console창 상단 과정 이어서 CREATE TABLE nodejs.users ( 입력 후 엔터
2. ->가 뜨면 id INT NOT NULL AUTO_INCREMENT, 입력 후 엔터
3. name VARCHAR(20) NOT NULL,
4. age INT UNSIGNED NOT NULL, // UNSIGNED : 음수값은 안받음
5. married TINYINT NOT NULL,
6. comment TEXT NULL,
7. created_at DATETIME NOT NULL DEFAULT now(),
8. PRIMARY KEY(id),
9. UNIQUE INDEX name_UNIQUE (name ASC))
10. COMMENT = "사용자 정보"
11. ENGINE = InnoDB;

** 테이블 확인
mysql> use nodejs // database select 용 만약 no database selected 오류가 뜬다면 입력
mysql> DESC users;
mysql> DROP TABLE users; // 테이블 삭제

** 테이블 만들기 (comments 테이블)
1. CREATE TABLE nodejs.comments (
2. id INT NOT NULL AUTO_INCREMENT,
3. commenter INT NOT NULL,
4. comment VARCHAR(100) NOT NULL,
5. created_at DATETIME NOT NULL DEFAULT now(),
6. PRIMARY KEY(id),
7. INDEX commenter_idx (commenter ASC),
8. CONSTRAINT commenter
9. FOREIGN KEY (commenter)
10. REFERENCES nodejs.users (id)
11. ON DELETE CASCADE
12. ON UPDATE CASCADE)
13. COMMENT = "댓글"
14. ENGINE = InnoDB;

mysql> SHOW tables; -> 만든 테이블 명 2개 뜸 // comments, user

<-- commeter가 userd의 id값을 참조하기위해 constraint라는 값을쓰고
밑에 참조하는 외래키 forignkey로 commenter지정
어떤값을 참조할 것인지 reference 참조할테이블 명 (그 테이블의 컬럼값) -->


-- CRUD?
Create, Read, Update, DELETE
대부분의 컴퓨터 소프트웨어 및 프로그램들이 가지고 있는 기본적인 데이터 처리기능을 4가지 섹션으로 요약해놓은

ex ) ToDoList
Create: 메인페이지 / 일기 작성 페이지 / 일기 상세 페이지
  -> 라우터 / 화면에 출력할 컴포넌트
Read: 화면 출력을 위해 필요한 소스코드 및 저장공간
  -> 네비게이트 / 이벤트
Update: 투두리스트가 변경되거나 추가되어야할 때 작성해야하는 소스코드 및 저장공간
  -> 이벤트 / 저장공간 (*배열 혹은 객체)
Delete: 투두리스트 안에 입력되어있던 목록을 실행했을 때, 불필요한 목록이 있을 때 삭제할 수 있는 소스코드
  -> 이벤트 / 삭제처리할 함수 및 기능



** 테이블에 값 넣기 (INSERT)
INSERT INTO nodejs.users (name, age, married, comment) VALUES ('Oh', 24, 0, '내 정보'); 
INSERT INTO nodejs.users (name, age, married, comment) VALUES ('Kim', 22, 0, '유정이 정보');
--> value는 1대1 매칭되게 써야함

SELECT * FROM nodejs.users; // 테이블에 넣은 값 확인

INSERT INTO nodejs.comments (commenter, comment) VALUES (1, '안녕하세요. 오건희의 댓글입니다.');

// 원하는 조건으로 검색하기
SELECT name, age FROM nodejs.users WHERE married = 0 AND age > 22;
SELECT name, age FROM nodejs.users WHERE married = 0 OR age > 22;
SELECT name FROM nodejs.users ORDER BY age DESC LIMIT 1;

// 수정하기
UPDATE nodejs.users SET comment = "바꿀내용" WHERE id = 2;

=========================================

시퀄라이즈 (*Sequelize) 라이브러리
=> 자바스크립트 언어를 기반으로 작동

npm i express morgan nunjucks sequelize sequelize-cli mysql2
npm i nodemon -D

npx sequelize init

models 안에 index.js 전부 삭제 후 커스텀